name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint

    - name: Set up environment variables for Secrets
      run: |
        # Provide a dummy DATABASE_URL for the app to initialize,
        # as tests will override the actual connection with SQLite.
        echo "DATABASE_URL=postgresql://user:password@localhost:5432/dummy_db" >> $GITHUB_ENV

        printf "SECRET_KEY=%s\n" "${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
        printf "GEMINI_API_KEY=%s\n" "${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
        printf "IGDB_CLIENT_ID=%s\n" "${{ secrets.IGDB_CLIENT_ID }}" >> $GITHUB_ENV
        printf "IGDB_CLIENT_SECRET=%s\n" "${{ secrets.IGDB_CLIENT_SECRET }}" >> $GITHUB_ENV

    - name: Run Tests with Coverage
      env:
        PYTHONPATH: .
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing

    - name: Run Pylint
      run: pylint app/

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml